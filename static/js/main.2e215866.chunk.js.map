{"version":3,"sources":["reducers/lines.js","reducers/cursor.js","reducers/index.js","actions/index.js","components/Line.js","components/Lines.js","components/App.js","index.js"],"names":["lines","state","arguments","length","undefined","text","action","type","console","log","no","map","item","index","newState","slice","splice","cursor","col","row","combineReducers","insertLine","setCursor","Line","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","send","bind","assertThisInitialized","keyHandler","e","onChange","target","value","keyCode","onUp","onDown","onEnter","react_default","a","createElement","className","ref","onKeyDown","isFocus","refs","rawInput","focus","updateFocus","React","Component","Text","propTypes","PropTypes","func","isRequired","number","isRequires","string","Lines","line","components_Line","assign","key","addFocus","addClassName","indexOf","calcClassName","LinesContainer","connect","ownProps","dispatch","changeLine","App","components_Lines","store","createStore","rootReducer","subscribe","getState","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2e215866.chunk.js","sourcesContent":["function lines(state = [{text:\"\"}], action){\n  switch(action.type){\n    case 'CHANGE_LINE':\n      console.log(\"CHANGE_LINE\", action.no, action.text)\n      return state.map((item, index) => {\n        if(index !== action.no){\n          return item\n        }\n        return {\n          text: action.text\n        }\n      })\n    case 'INSERT_LINE':\n      console.log(\"INSERT_LINE\", action.no, action.text)\n      let newState = state.slice()\n      newState.splice(action.no, 0, {text: action.text})\n      return newState\n  }\n  return state\n}\n\nexport default lines\n","function cursor(state = {col: 0, row: 0}, action){\n  switch(action.type){\n    case 'SET_CURSOR':\n    return {\n      row: action.row,\n      col: action.col,\n    }\n  }\n  return state;\n}\n\nexport default cursor\n","import { combineReducers } from 'redux'\nimport lines from './lines'\nimport cursor from './cursor'\n\nexport default combineReducers({\n  lines,\n  cursor,\n})\n\n\n","\nexport const changeLine = (no, text) => ({\n  type: 'CHANGE_LINE',\n  text,\n  no,\n})\n\nexport const insertLine = (no, text) => ({\n  type: 'INSERT_LINE',\n  text,\n  no,\n})\n\nexport const setCursor = (row, col) => ({\n  type: 'SET_CURSOR',\n  row,\n  col,\n})\n\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass Line extends React.Component{\n  constructor(props) {\n    super(props)\n    this.send = this.send.bind(this);\n    this.keyHandler = this.keyHandler.bind(this);\n  }\n  send(e){\n    this.props.onChange(this.props.no, e.target.value)\n    return;\n  }\n  keyHandler(e){\n    switch(e.keyCode){\n      case 38: //up\n      this.props.onUp(this.props.no)\n      break;\n      case 40: //down\n      this.props.onDown(this.props.no)\n      break;\n      case 13: //enter\n      this.props.onEnter(this.props.no)\n      break;\n    }\n  }\n  render() {\n    return (\n      <div className={'line ' + this.props.className}>\n        <input type=\"text\" ref=\"rawInput\" value={this.props.text} onChange={this.send} onKeyDown={this.keyHandler} />\n      </div>\n    )\n  }\n  updateFocus(){\n    if(this.props.isFocus){\n      this.refs.rawInput.focus();\n    }\n  }\n  componentDidUpdate(){\n    this.updateFocus()\n  }\n  componentDidMount(){\n    this.updateFocus()\n  }\n\n}\nText.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onUp: PropTypes.func.isRequired,\n  onDown: PropTypes.func.isRequired,\n  no: PropTypes.number.isRequires,\n  text: PropTypes.string.isRequired\n}\n\nexport default Line\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {changeLine, insertLine, setCursor} from '../actions'\nimport Line from './Line'\n\nclass Lines extends React.Component{\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <div>\n        {this.props.lines.map((line, index) => (\n          <Line key={index} {...line} onChange={this.props.onChange} onUp={this.props.onUp} onDown={this.props.onDown} onEnter={this.props.onEnter} />\n        ))}\n      </div>\n    )\n  }\n}\nLines.propTypes = {\n  onChange: PropTypes.func.isRequired,\n}\n\nconst addNumber = (lines => {\n  return lines.map((line, index) => {\n    line.no = index\n    return line;\n  })\n})\nconst addFocus = ((row, lines) => {\n  return lines.map((line, index) => {\n    if(index == row){\n      line.isFocus = true;\n    }else{\n      line.isFocus = false;\n    }\n    return line;\n  });\n})\nconst calcClassName = (text) => {\n  let className = \"normal\"\n  if(text.indexOf(\"###\") == 0){\n    className = \"h3\"\n  }else if(text.indexOf(\"##\") == 0){\n    className = \"h2\"\n  }else if(text.indexOf(\"#\") == 0){\n    className = \"h1\"\n  }\n  return className;\n}\nconst addClassName = (lines => {\n  return lines.map(line => {\n    line.className = calcClassName(line.text);\n    if(line.isFocus){\n      line.className += \" focus\"\n    }\n    return line;\n  })\n})\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    lines: addClassName(addFocus(state.cursor.row, addNumber(state.lines))),\n    cursor: state.cursor\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onChange: (no,text) => {\n      dispatch(changeLine(no, text))\n    },\n    onUp: (no) => {\n      if(no > 0){\n        dispatch(setCursor(no - 1))\n      }\n    },\n    onDown: (no) => {\n      dispatch(setCursor(no + 1))\n    },\n    onEnter: (no) => {\n      dispatch(setCursor(no + 1))\n      dispatch(insertLine(no + 1, \"\"))\n    },\n  }\n}\n\nconst LinesContainer = connect(mapStateToProps, mapDispatchToProps)(Lines)\n\n\nexport default LinesContainer\n","import React from 'react'\nimport Lines from './Lines'\n\nconst App = () => (\n  <div>\n    <Lines />\n  </div>\n)\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\nimport App from './components/App'\nimport {insertLine, changeLine} from './actions'\nimport './index.css';\n\nconst store = createStore(rootReducer)\nconst unsubscribe = store.subscribe(() => console.log(\"state\",store.getState()))\n\nstore.dispatch(insertLine(0,\"# React.jsで作ったインラインマークダウンエディタ\"))\nstore.dispatch(insertLine(1,\"カーソル移動などまだおかしいです。\"))\nstore.dispatch(insertLine(2,\"## 作った人\"))\nstore.dispatch(insertLine(3,\"@ina_ani\"))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}